name: CI

on:
  push:
    branches:
      - v0.3.x
  pull_request:
    branches:
      - v0.3.x
  schedule:
    - cron: "58 7 * * 3"

jobs:
  fmt:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          key: fmt
          toolchain: nightly
          components: rustfmt

      - run: cargo fmt --all -- --check

  test:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - "1.55"
          - stable
          - nightly

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          key: test
          toolchain: ${{ matrix.toolchain }}
          components: clippy

      - run: cargo check --package tzdb:0.3.11 --all-targets
      - run: cargo clippy --package tzdb:0.3.11 --all-targets -- -D warnings
      - run: cargo test --package tzdb:0.3.11 --all-targets -- --show-output
      - run: cargo clippy --package tzdb:0.3.11 --all-targets -- -D clippy::pedantic

  doc:
    name: "Documentation"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          key: name
          toolchain: nightly
          components: rust-docs

      - run: RUSTDOCFLAGS="-D warnings --cfg docsrs" cargo doc --package tzdb:0.3.11 --all-features --no-deps

  audit:
    name: "Cargo audit"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          key: audit

      - name: Update lockfile
        run: cargo generate-lockfile

      - name: Audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  package:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup-rust
        with:
          key: package
          toolchain: stable

      - run: cargo package --package tzdb:0.3.11

  devskim:
    name: DevSkim
    runs-on: ubuntu-20.04
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run DevSkim scanner
        uses: microsoft/DevSkim-Action@v1

      - name: Upload DevSkim scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: devskim-results.sarif
